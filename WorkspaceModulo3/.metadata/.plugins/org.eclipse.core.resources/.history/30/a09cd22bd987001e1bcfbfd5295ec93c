package com.krakedev.servicios;

import java.util.ArrayList;

import javax.websocket.server.PathParam;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import com.krakedev.entidades.Cliente;
import com.krakedev.execepciones.KrakedevEception;
import com.krakedev.persistencia.ClientesBDD;

@Path("customers")
public class ServicioClientes {

	@Path("m1")
	@GET
	public String saludar() {
		return "Hola Mundo Rest Web Service";
	}

	@Path("buscar")
	@GET
	// devolver un cliente en forma json
	@Produces(MediaType.APPLICATION_JSON)
	public Cliente buscar() {
		Cliente cliente = new Cliente("0803473784", "Jonathan", 2);
		return cliente;
	}

	@Path("insertar")
	@POST
	// recibir un cliente en formato json
	@Consumes(MediaType.APPLICATION_JSON)
	public Response insertar(Cliente cliente) {
		System.out.println("<<<<<<<" + cliente);
		ClientesBDD cli = new ClientesBDD();
		try {
			cli.insertar(cliente);
			// devuelve 200
			return Response.ok().build();

		} catch (KrakedevEception e) {
			e.printStackTrace();
			// devuelve error 500
			return Response.serverError().build();
		}
	}

	@Path("actualizar")
	@PUT
	// recibir un cliente en formato json
	@Consumes(MediaType.APPLICATION_JSON)
	public Response actualizar(Cliente cliente) {
		System.out.println("<<<<<<<" + cliente);
		ClientesBDD cli = new ClientesBDD();
		try {
			cli.actualizar(cliente);
			// devuelve 200
			return Response.ok().build();

		} catch (KrakedevEception e) {
			e.printStackTrace();
			// devuelve error 500
			return Response.serverError().build();
		}
	}

	
	
	@Path("all")
	@GET
	//devuelve un lista de cliente en formato jeinson
	@Produces(MediaType.APPLICATION_JSON)
	// recuperar lista de clientes
	
	public Response obtenerClientes() {
		ClientesBDD cli = new ClientesBDD();
		ArrayList<Cliente> clientes = null;;
		try {
			clientes = cli.recuperarTodos();
			return Response.ok(clientes).build();

		} catch (KrakedevEception e) {
			e.printStackTrace();
			return Response.serverError().build();

		}

	}
	
	//buscar por clave primaria
	
	@Path("buscarPorCedula/{cedulaParam}") //para pasarle la cedula por parametro
	@GET
	//devuelve un lista de cliente en formato jeinson
	@Produces(MediaType.APPLICATION_JSON)
	// recuperar lista de clientes
	
	public Response buscarPorCedula(@PathParam ("cedulaParam") String cedula) {
		ClientesBDD cli = new ClientesBDD();
		Cliente cliente = null;
		try {
			cliente = cli.buscarPorPK(cedula);
			return Response.ok(cliente).build();

		} catch (KrakedevEception e) {
			e.printStackTrace();
			return Response.serverError().build();

		}

	}
	
	
	@Path("buscarPorHijos/{hijoParam}")
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	
	public Response buscarPorHijos(@PathParam("hijoParam") int numeroHijos) {

		ClientesBDD cli = new ClientesBDD();
		ArrayList<Cliente> clientes = null;;
		try {
			clientes = cli.recuperarHijos(numeroHijos);
			return Response.ok(clientes).build();

		} catch (KrakedevEception e) {
			e.printStackTrace();
			return Response.serverError().build();

		}

	}
	

}
